name: Manual Run Data(subset) Pipeline

on:
  workflow_dispatch:
    inputs:
      spreadsheet_ids:
        description: Spreadsheet Ids (delimited by comma)
        required: true
      db_env:
        description: Database Environment (staging or production)
        required: true

jobs:
  load_spreadsheets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install .[all]
      - name: Decrypt Google API secret
        run: ./.github/scripts/decrypt_google_api_secret.sh
        env:
          GOOGLE_API_SECRET_PASSPHRASE: ${{ secrets.GOOGLE_API_SECRET_PASSPHRASE }}
      - name: Load spreadsheets
        run: |
          load_spreadsheets -gacp $HOME/secrets/google-api-credentials.json -ssi ${{ github.event.inputs.spreadsheet_ids }} -dbe ${{ github.event.inputs.db_env }} -sdbcu ${{ secrets.STAGING_DB_CONNECTION_URL }} -pdbcu ${{ secrets.PRODUCTION_DB_CONNECTION_URL }} 2>data-pipeline-errors.txt
      - name: Upload Data Pipeline Errors Artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: load-spreadsheets-errors
          path: data-pipeline-errors.txt
      - name: Create tmp dir
        if: ${{ success() }}
        run: mkdir -p tmp
      - name: Run QA Test
        if: ${{ success() }}
        run: |
          run_qa_test  -gacp $HOME/secrets/google-api-credentials.json -ssi ${{ github.event.inputs.spreadsheet_ids }} -dbe ${{ github.event.inputs.db_env }} -sdbcu ${{ secrets.STAGING_DB_CONNECTION_URL }} -pdbcu ${{ secrets.PRODUCTION_DB_CONNECTION_URL }}
      - name: Upload QA Test Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: qa-test-artifact
          path: qa-test.zip
  